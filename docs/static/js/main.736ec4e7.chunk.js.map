{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAMaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAuB9C,OACI,0BAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAEvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAvBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCblBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DAEP,mCAENC,EAJa,iDAIoCC,UAAUH,GAJ9C,6BAEP,oCAFO,SAKAI,MAAOF,GALP,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAkBZM,GAlBY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,2BAAKA,KCLJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAIGqB,EDlB0BO,CAAa5B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACA,oCACI,wBAAIJ,UAAU,qCAAsChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEb,yBAAKA,UAAU,aAEXH,EAAOJ,KAAK,SAAEC,GAAF,OACR,kBAAC,EAAD,eACImB,IAAMnB,EAAIC,IACLD,UEfZoB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,YAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAS9B,OACA,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA6B,IAAM7B,EACNA,SAAWA,U,MClB/BgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.736ec4e7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// rafc para crear toda la estructura\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleInputChange = (e) => {\n        //console.log(e.target.value);\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        // para que no refresque al presionar en el input enter\n        e.preventDefault();\n        //console.log('Submit Echo')\n\n        if( inputValue.trim().length > 2) {\n            setCategories( cats => [inputValue, ...cats] );\n            // limpiamos el input y evitamos 2 posteos\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n","export const getGifs = async ( category ) => {\n\n    const api = 'rTS6dDfisOBycgkEoKG0n5JrWpzJtefH';\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${ api }`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    //console.log(gifs);\n    //setImages(gifs);\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n\n    //console.log( props.id );\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n\n    return (\n    <>\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n        \n        <div className=\"card-grid\">\n            {\n            images.map( ( img ) => (\n                <GifGridItem \n                    key={ img.id }\n                    { ...img } \n                />\n            ))\n            }\n        </div>\n    </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                console.log(imgs)\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n    }, [category])\n\n    \n\n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Pokemon']);\n\n    /* const handleAdd = (e) => {\n            // setCategories( ['Akame Kill', ...categories] );\n            setCategories( cats => ['Akame Kill', ...cats]);\n    } */\n\n    return ( \n    <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={setCategories} />\n        <hr/>\n\n        <ol>\n            {\n                categories.map( category => (\n                    <GifGrid \n                    key={ category }\n                    category={ category }\n                    />\n                ))\n            }\n        </ol>\n    </> );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';  \n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}